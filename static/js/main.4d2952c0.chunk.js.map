{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_large","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAqB9C,OACI,0BAAMC,SAfW,SAAEC,GACnBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAUd,+BAAKD,EAAL,KACA,2BACIQ,KAAK,OACLC,MAAOT,EACPU,SAxBc,SAAEP,GAExBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,gBAAgBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCGPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OACI,yBAAKc,UAAU,4CACX,yBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,2BAAIA,KCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkCnC,OA3BHC,qBAAU,WAEVxB,EAASC,GACJwB,MAAK,SAAAC,GAIFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAUlB,CAACpB,IAQMqB,EDhC2BK,CAAc1B,GAAnCa,EAFmB,EAExBN,KAAca,EAFU,EAEVA,QAGrB,OAEI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAEtDoB,GAAW,uBAAGJ,UAAU,oCAAb,cAER,yBAAKA,UAAU,aAIfH,EAAOJ,KAAK,SAAAC,GAAG,OAEX,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACJD,UEpBhBkB,EAAe,WAAM,MAIM1C,mBAAS,CAAC,qBAJhB,mBAIvB2C,EAJuB,KAIX5C,EAJW,KAY9B,OACI,oCACI,kEAEA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAGQ4C,EAAWpB,KAAK,SAACT,GAAD,OAChB,kBAAE,EAAF,CACA2B,IAAK3B,EACLA,SAAUA,U,MCxB9B8B,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4d2952c0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setInputValue]= useState('')\r\n    const handleInputChange = ( e ) => {\r\n        \r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = ( e ) =>{\r\n        e.preventDefault()\r\n\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [inputValue, ...cats ]);\r\n            setInputValue('');\r\n\r\n        }\r\n\r\n        //console.log('Submit hecho')\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <p> {inputValue} </p>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue} \r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Agc38FJVCToMz0jt4L7b6dhFT6GE8q6k`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_large.url\r\n        } \r\n    })\r\n\r\n    return gifs;\r\n\r\n\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className='card animate__animated animate__bounceIn'>\r\n            <img src={ url } alt={title} />\r\n            <p>{title}</p>    \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nGifGridItem.propTypes={\r\n    \r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n\r\n}","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n        const {data:images , loading } = useFetchGifs( category );\r\n    \r\n    \r\n        return (\r\n        \r\n            <>    \r\n                <h3 className='animate__animated animate__bounce'>{category}</h3>\r\n\r\n            {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n\r\n                <div className='card-grid'>\r\n            \r\n            \r\n                {\r\n                images.map( img => ( //.map recorre la lista buscando os parametros en la desestructuracion\r\n                    \r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        { ...img } \r\n                    />\r\n                ))\r\n                }\r\n        \r\n                    </div> \r\n            </>    \r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n    getGifs( category )\r\n        .then(imgs => {\r\n\r\n       \r\n        \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n\r\n       \r\n\r\n        })\r\n\r\n    \r\n\r\n\r\n    }, [category])\r\n\r\n/*  setTimeout(() => {\r\n        setState({\r\n            data: [1,2,3,4,5,6,7,8,9,0],\r\n            loading: false\r\n        })\r\n    }, 3000); */\r\n       return state; //{ data:[], loading:true };\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch Man', 'Samurai Champloo', 'Dragon Ball' ]\r\n\r\n    const [categories, setCategories] = useState(['Samurai Champloo'] );\r\n\r\n    /*  const handleAdd = () => {\r\n\r\n        //setCategories( [...categories, 'HunterxHunter'] );\r\n        setCategories(cats => [...cats, 'HunterxHunter'])\r\n    }  */\r\n    \r\n    return (\r\n        <>\r\n            <h2>Gif Expert App aprendia con Blenio</h2>\r\n\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n\r\n            <ol>\r\n\r\n                {\r\n                    categories.map( (category)  =>  \r\n                    < GifGrid \r\n                    key={category}\r\n                    category={category} />\r\n                    ) \r\n                }    \r\n\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from '../src/GifExpertApp'\nimport './index.css';\n\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}